From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KennyTV <28825609+KennyTV@users.noreply.github.com>
Date: Sat, 9 Nov 2019 13:24:50 +0100
Subject: [PATCH] Opt to disable data and log saving


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index f55dc28f3e220966199ec718a437e50ef4b76027..7a421f09b85bb6f03668acad1db7a0cebe2722f0 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -133,6 +133,14 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
         System.setErr(IoBuilder.forLogger(logger).setLevel(Level.WARN).buildPrintStream());
         // CraftBukkit end
 
+        // Luminu start - option to disable log file saving
+        java.util.Map<String, org.apache.logging.log4j.core.Appender> appenders = ((org.apache.logging.log4j.core.Logger) LogManager.getRootLogger()).getAppenders();
+        if (!this.propertyManager.getProperties().saveLogsToFile) {
+            appenders.remove("File");
+            logger.info("Disabled log file saving!");
+        }
+        // Luminu end
+
         thread.setDaemon(true);
         thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(DedicatedServer.LOGGER));
         thread.start();
diff --git a/src/main/java/net/minecraft/server/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/DedicatedServerProperties.java
index 679865e1198bdbb4321d21910804febcc723f7f1..ac536c25ea417beea455a2ca30593409f23686d6 100644
--- a/src/main/java/net/minecraft/server/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/DedicatedServerProperties.java
@@ -56,6 +56,8 @@ public class DedicatedServerProperties extends PropertyManager<DedicatedServerPr
     public final PropertyManager<DedicatedServerProperties>.EditableProperty<Boolean> whiteList;
     public final GeneratorSettings generatorSettings;
     public String serverName; // Luminu - readd (configurable) servername
+    public boolean saveDataOnStop; // Luminu - option to disable world and player data saving on stop
+    public boolean saveLogsToFile; // Luminu - option to disable log file saving
 
     public final String rconIp; // Paper - Add rcon ip
 
@@ -115,6 +117,8 @@ public class DedicatedServerProperties extends PropertyManager<DedicatedServerPr
         // Paper end
         this.generatorSettings = GeneratorSettings.a(iregistrycustom, properties);
         this.serverName = this.getString("server-name", "Unknown server"); // Luminu - readd servername
+        this.saveDataOnStop = this.getBoolean("save-world-on-stop", true); // Luminu - option to disable world and player data saving on stop
+        this.saveLogsToFile = this.getBoolean("save-log-files", true); // Luminu - option to disable log file saving
     }
 
     // CraftBukkit start
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 883c17f00b3766b1e4e308bf9baf0ab07d6475bf..92b90189331da77b4693032fcfa3118f3f9210c1 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -778,6 +778,8 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             this.getServerConnection().b();
         }
 
+        // Luminu start - add option to disable saving
+        if (server.getServer().propertyManager.getProperties().saveDataOnStop) { // don't indent because of larger diff :(
         if (this.playerList != null) {
             MinecraftServer.LOGGER.info("Saving players");
             this.playerList.savePlayers();
@@ -831,6 +833,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             this.getUserCache().b(false); // Paper
         }
         // Spigot end
+        } // Luminu end
         // Paper start - move final shutdown items here
         LOGGER.info("Flushing Chunk IO");
         com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE.close(true, true); // Paper
@@ -1031,13 +1034,17 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                 crashreport = this.b(new CrashReport("Exception in server tick loop", throwable));
             }
 
+            // Luminu start - option to disable log file saving
+            if (server.getServer().propertyManager.getProperties().saveLogsToFile) {
             File file = new File(new File(this.B(), "crash-reports"), "crash-" + (new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss")).format(new Date()) + "-server.txt");
-
             if (crashreport.a(file)) {
                 MinecraftServer.LOGGER.error("This crash report has been saved to: {}", file.getAbsolutePath());
             } else {
                 MinecraftServer.LOGGER.error("We were unable to save this crash report to disk.");
             }
+            }
+            MinecraftServer.LOGGER.error(crashreport.e()); // Luminu - log crash report
+            // Luminu end
 
             this.a(crashreport);
         } finally {
